{
    "browser": true,      // Browser globals: e.g. window, document
    "bitwise": false,     // Prohibit bitwise operators (&, |, ^, etc.)
    "camelcase": true,    // Permit only camelcase for `var` and `object indexes`
    "curly": true,        // Require {} for every new block or scope
    "devel": false,       // Allow development statements e.g. `console.log();`.
    "eqeqeq": true,       // Require triple equals i.e. `===`
    "esnext": false,      // Allow ES.next features e.g. const and let
    "immed": true,        // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "indent": 4,          // Specify indentation spacing
    "latedef": false,     // Prohibit variable use before definition. (false b/c we need to hoist callback functions)
    "maxlen": 120,        // Max line length
    "newcap": true,       // Require capitalization of all constructor functions e.g. `new F()`.
    "noarg": true,        // Prohibit use of `arguments.caller` and `arguments.callee`.
    "node": true,         // NodeJS globals
    "noempty": true,      // Prohibit use of empty blocks.
    "quotmark": "single", // Define quotes to string values.
    "regexp": true,       // Prohibit `.` and `[^...]` in regular expressions.
    "smarttabs": false,   // Suppresses warnings about mixed tabs and spaces
    "strict": true,       // Require `use strict` pragma in every "file.
    "trailing": true,     // Prohibit trailing whitespaces.
    "undef": true,        // Require all non-global variables be declared before they are used.
    "unused": true,       // Warn unused variables.
    "globals": {          // Globals variables.
        "angular": true,
        "brackets": true,
        "window": true,
        "require": true,
        "define": true,
        "$": true
    },
    "predef": [ // Extra globals.
        "define",
        "exports",
        "module",
        "describe",
        "before",
        "beforeEach",
        "after",
        "afterEach",
        "it",
        "inject",
        "expect",
        "next"
    ]
}